# Generated by Django 2.1.3 on 2019-01-10 09:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('applicationid', models.AutoField(db_column='ApplicationID', primary_key=True, serialize=False)),
                ('applicationname', models.CharField(db_column='ApplicationName', max_length=125)),
                ('businessunit', models.CharField(db_column='BusinessUnit', max_length=125)),
                ('product', models.CharField(db_column='Product', max_length=125)),
                ('priority', models.SmallIntegerField(blank=True, db_column='Priority', null=True)),
                ('owner_emailid', models.CharField(db_column='Owner_EmailId', max_length=125)),
                ('delegatedowner_emailid', models.CharField(blank=True, db_column='DelegatedOwner_EmailId', max_length=125, null=True)),
                ('ownershipdelegationenddate', models.DateTimeField(blank=True, db_column='OwnershipDelegationEndDate', null=True)),
                ('primarycontact_emailid', models.CharField(db_column='PrimaryContact_EmailId', max_length=125)),
                ('secondarycontact_emailid', models.CharField(blank=True, db_column='SecondaryContact_EmailId', max_length=125, null=True)),
                ('secondarycontact2_emailid', models.CharField(blank=True, db_column='SecondaryContact2_EmailId', max_length=125, null=True)),
                ('collectiontime', models.DateTimeField(db_column='CollectionTime')),
            ],
            options={
                'db_table': 'Application',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('instanceid', models.AutoField(db_column='InstanceID', primary_key=True, serialize=False)),
                ('sqlinstance', models.CharField(db_column='SqlInstance', max_length=125, unique=True)),
                ('instancename', models.CharField(db_column='InstanceName', max_length=50)),
                ('rootdirectory', models.CharField(blank=True, db_column='RootDirectory', max_length=255, null=True)),
                ('version', models.CharField(db_column='Version', max_length=15)),
                ('commonversion', models.CharField(blank=True, db_column='CommonVersion', max_length=5, null=True)),
                ('build', models.IntegerField(blank=True, db_column='Build', null=True)),
                ('versionstring', models.CharField(blank=True, db_column='VersionString', max_length=125, null=True)),
                ('edition', models.CharField(db_column='Edition', max_length=50)),
                ('collation', models.CharField(blank=True, db_column='Collation', max_length=50, null=True)),
                ('productkey', models.CharField(blank=True, db_column='ProductKey', max_length=29, null=True)),
                ('defaultdatalocation', models.CharField(blank=True, db_column='DefaultDataLocation', max_length=255, null=True)),
                ('defaultloglocation', models.CharField(blank=True, db_column='DefaultLogLocation', max_length=255, null=True)),
                ('defaultbackuplocation', models.CharField(blank=True, db_column='DefaultBackupLocation', max_length=255, null=True)),
                ('errorlogpath', models.CharField(blank=True, db_column='ErrorLogPath', max_length=255, null=True)),
                ('serviceaccount', models.CharField(blank=True, db_column='ServiceAccount', max_length=125, null=True)),
                ('port', models.CharField(blank=True, db_column='Port', max_length=6, null=True)),
                ('isstandaloneinstance', models.BooleanField(db_column='IsStandaloneInstance')),
                ('issqlcluster', models.BooleanField(db_column='IsSQLCluster')),
                ('isaglistener', models.BooleanField(db_column='IsAGListener')),
                ('isagnode', models.BooleanField(db_column='IsAGNode')),
                ('hasotherhasetup', models.BooleanField(db_column='HasOtherHASetup')),
                ('harole', models.CharField(blank=True, db_column='HARole', max_length=20, null=True)),
                ('ispowershelllinked', models.BooleanField(blank=True, db_column='IsPowershellLinked', null=True)),
                ('isdecom', models.BooleanField(db_column='IsDecom')),
                ('decomdate', models.DateTimeField(blank=True, db_column='DecomDate', null=True)),
                ('collectiondate', models.DateTimeField(db_column='CollectionDate')),
                ('collectedby', models.CharField(db_column='CollectedBy', max_length=50)),
                ('updateddate', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updatedby', models.CharField(blank=True, db_column='UpdatedBy', max_length=50, null=True)),
                ('remark1', models.TextField(blank=True, db_column='Remark1', null=True)),
                ('remark2', models.TextField(blank=True, db_column='Remark2', null=True)),
            ],
            options={
                'db_table': 'Instance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('serverid', models.AutoField(db_column='ServerID', primary_key=True, serialize=False)),
                ('servername', models.CharField(db_column='ServerName', max_length=50, unique=True)),
                ('environmenttype', models.CharField(blank=True, choices=[('NA', 'Not Available'), ('Dev', 'Dev'), ('QA', 'QA'), ('Test', 'Test'), ('UAT', 'UAT'), ('Prod', 'Prod')], db_column='EnvironmentType', max_length=4, null=True)),
                ('fqdn', models.CharField(db_column='FQDN', max_length=125, unique=True)),
                ('ipaddress', models.CharField(blank=True, db_column='IPAddress', max_length=15, null=True)),
                ('domain', models.CharField(blank=True, db_column='Domain', max_length=30, null=True)),
                ('isstandaloneserver', models.BooleanField(blank=True, db_column='IsStandaloneServer', null=True)),
                ('issqlclusternode', models.BooleanField(blank=True, db_column='IsSqlClusterNode', null=True)),
                ('isagnode', models.BooleanField(blank=True, db_column='IsAgNode', null=True)),
                ('iswsfc', models.BooleanField(blank=True, db_column='IsWSFC', null=True)),
                ('issqlcluster', models.BooleanField(blank=True, db_column='IsSqlCluster', null=True)),
                ('isag', models.BooleanField(blank=True, db_column='IsAG', null=True)),
                ('os', models.CharField(blank=True, db_column='OS', max_length=125, null=True)),
                ('spversion', models.CharField(blank=True, db_column='SPVersion', max_length=50, null=True)),
                ('isvm', models.BooleanField(blank=True, db_column='IsVM', null=True)),
                ('isphysical', models.BooleanField(blank=True, db_column='IsPhysical', null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=125, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=125, null=True)),
                ('ram', models.IntegerField(blank=True, db_column='RAM', null=True)),
                ('cpu', models.SmallIntegerField(blank=True, db_column='CPU', null=True)),
                ('powerplan', models.CharField(blank=True, db_column='Powerplan', max_length=50, null=True)),
                ('osarchitecture', models.CharField(blank=True, db_column='OSArchitecture', max_length=6, null=True)),
                ('isdecom', models.BooleanField(blank=True, db_column='ISDecom', null=True)),
                ('decomdate', models.DateTimeField(blank=True, db_column='DecomDate', null=True)),
                ('generaldescription', models.TextField(blank=True, db_column='GeneralDescription', null=True)),
                ('collectiondate', models.DateTimeField(blank=True, db_column='CollectionDate', null=True)),
                ('collectedby', models.CharField(blank=True, db_column='CollectedBy', max_length=50, null=True)),
                ('updateddate', models.DateTimeField(blank=True, db_column='UpdatedDate', null=True)),
                ('updatedby', models.CharField(blank=True, db_column='UpdatedBy', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Server',
                'managed': False,
            },
        ),
    ]
